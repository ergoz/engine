syntax = "proto3";
package webitel.contacts;
option go_package = "webitel.go/api/contacts;contacts";

import "contacts/fields.proto";

import "google/api/visibility.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// A contact's [I]nstant[M]essaging client.
message IMClient {

  // option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
  //   // GET /contacts/{source.id}/imclients/{user.id}
  //   example: ""
  // };
  
  // [META]: --------------------------------------

  // The unique ID of the association. Never changes.
  string id = 1;
  
  // Version of the latest update. Numeric sequence.
  int32 ver = 2;

  // Unique ID of the latest version of the update.
  // This ID changes after any update to the underlying value(s).
  string etag = 3;

  // // The Contact source associated with.
  // webitel.contacts.Lookup contact = 4;

  // The user who created this Field.
  int64 created_at = 5;

  // Timestamp(milli) of the Field creation.
  webitel.contacts.Lookup created_by = 6;
  
  // Timestamp(milli) of the last Field update.
  // Take part in Etag generation.
  int64 updated_at = 7;
  
  // The user who performed last Update.
  webitel.contacts.Lookup updated_by = 8;
  
  // [VALUE]: --------------------------------------

  // End-User account used in the IM client.
  Lookup user = 11
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "{\"id\":\"596417343\",\"type\":\"telegram\",\"name\":\"John Doe\"}"
  }];

  // // The protocol of the IM client.
  // // The protocol can be custom or one of these predefined values:
  // // - aim
  // // - msn
  // // - yahoo
  // // - skype
  // // - qq
  // // - googleTalk
  // // - icq
  // // - jabber
  // // - netMeeting
  // // - messenger (facebook, instagram)
  // // - telegram
  // // - viber
  // // - whatsApp
  // string proto = 5;
  
  // // The username used in the IM client.
  // string userid = 6;

  // App (Text-Gateway) used to connect the IM client.
  webitel.contacts.Lookup app = 12;
  
  // Can be set by self VIA IM-Account gateway only !
  // If set -- all client sensitive data is READONLY, except .type !
  // If set -- can be manualy deleted, by the user or VIA source ONLY !
  
  // [Via] App(-specific) peer(-id) to connect[from] the IM client.
  string via = 13;

}

// Input of the contact IM client.
message InputIMClient {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    // PUT /contacts/{source.id}/imclients/{id}
    // example: "{\"ver\":\"1679792219687\",\"user\":{\"id\":\"5964113\",\"type\":\"telegram\",\"name\":\"Johnny Doe\"},\"app\":{\"id\":\"357\",\"type\":\"telegram\",\"name\":\"TGBot\"}}"
    json_schema: {
      required: ["user"]
    }
  };

  // [META]: --------------------------------------

  // Unique ID of the latest version of an existing resorce.
  string etag = 1
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    field_configuration: {
      path_param_name: "etag"
    }
  }];

  // [VALUE]: --------------------------------------

  // End-User account used in the IM client.
  Lookup user = 11
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "{\"id\":\"596417343\",\"type\":\"telegram\",\"name\":\"John Doe\"}"
  }];

  // // The protocol of the IM client.
  // // The protocol can be custom or one of these predefined values:
  // // - aim
  // // - msn
  // // - yahoo
  // // - skype
  // // - qq
  // // - googleTalk
  // // - icq
  // // - jabber
  // // - netMeeting
  // // - messenger (facebook, instagram)
  // // - telegram
  // // - viber
  // // - whatsApp
  // string proto = 5;
  
  // // The username used in the IM client.
  // string userid = 6;

  // App (Text-Gateway) used to connect the IM client.
  webitel.contacts.Lookup app = 12;
  
  // Can be set by self VIA IM-Account gateway only !
  // If set -- all client sensitive data is READONLY, except .type !
  // If set -- can be manualy deleted, by the user or VIA source ONLY !
  
  // [Via] App(-specific) peer(-id) to connect[from] the IM client.
  string via = 13;
}


// [I]nstant[M]essaging Clients service catalog.
service IMClients {

  // Locate the IM client link.
  rpc LocateIMClient(LocateIMClientRequest) returns (IMClient) {
    option (google.api.http) = {
      get: "/contacts/{contact_id}/imclients/{id}"
    };
  }

  // Search IM client links
  rpc SearchIMClients(SearchIMClientsRequest) returns (IMClientList)
  {
    option (google.api.http) = {
      get: "/contacts/{contact_id}/imclients"
      additional_bindings: {
        get: "/contacts/imclients"
      }
    };
  }
  // Link IM client(s) with the Contact
  rpc CreateIMClients(CreateIMClientsRequest) returns (IMClientList)
  {
    option (google.api.http) = {
      post: "/contacts/{contact_id}/imclients"
      body: "input"
    };
  }
  // Reset the Contact's IM clients to fit given data set. 
  rpc UpdateIMClients(UpdateIMClientsRequest) returns (IMClientList)
  {
    option (google.api.http) = {
      put: "/contacts/{contact_id}/imclients"
      body: "input"
    };
  }
  // Update the Contact's IM client link
  rpc UpdateIMClient(UpdateIMClientRequest) returns (IMClient)
  {
    option (google.api.http) = {
      put: "/contacts/{contact_id}/imclients/{input.etag}"
      body: "input"
      additional_bindings: {
        patch: "/contacts/{contact_id}/imclients/{input.etag}"
        body: "input"
      }
    };
  }
  // Remove the Contact's IM client link(s)
  rpc DeleteIMClients(DeleteIMClientsRequest) returns (IMClientList)
  {
    option (google.api.http) = {
      delete: "/contacts/{contact_id}/imclients"
      // response_body: "data"
    };
  }
  // Remove the Contact's IM client link
  rpc DeleteIMClient(DeleteIMClientRequest) returns (IMClient)
  {
    option (google.api.http) = {
      delete: "/contacts/{contact_id}/imclients/{etag}"
    };
  }
}


message IMClientList {

  // option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
  //   example: ""
  // };

  // IMClient dataset page.
  repeated IMClient data = 1;
  // The page number of the partial result.
  int32 page = 2;
  // Indicates that this is a partial result.
  // More data available upon query: ?size=${data.len}&page=${page++}
  bool next = 3;
}

// Locate link by unique IDentifier.
message LocateIMClientRequest {

  // ------- Result Options ------

  // Fields to be retrieved into result.
  repeated string fields = 1;

  // ------- Locate Options ------ //

  // Link contact ID.
  string contact_id = 2;
  
  // Link unique ID.
  string id = 3
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    // format: "int64"
    // pattern: "^[1-9](\\d){0,19}$"
    required: ["id"]
  }];

}


message SearchIMClientsRequest {
  
  // ------- Result Options ------ //
  
  // Page number of result dataset records. offset = (page*size)
  int32 page = 2;
  
  // Size count of records on result page. limit = (size++)
  int32 size = 1;

  // Search term: IMClient.
  // `?` - matches any one character
  // `*` - matches 0 or more characters
  // Search fields: {user,app}
  string q = 6;

  // Sort the result according to fields.
  repeated string sort = 3;
  
  // Fields to be retrieved into result.
  repeated string fields = 4;

  // ------- Search Options ------ //
  
  // Link contact ID.
  int64 contact_id = 5;
  
  // Link(s) with unique ID only.
  repeated string id = 7;

}

message CreateIMClientsRequest {

  // ------- Result Options -------

  // Fields to be retrieved into result of changes.
  repeated string fields = 1;

  // ------- Create Options -------

  // Link contact ID.
  string contact_id = 2;

  // Fixed set of IM client(s) to be linked with the contact.
  // IM client(s) that conflicts(user.id) with already linked will be updated.
  repeated InputIMClient input = 3
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "[{\"user\":{\"id\":\"5964113\",\"type\":\"telegram\",\"name\":\"Johnny Doe\"},\"app\":{\"id\":\"357\",\"type\":\"telegram\",\"name\":\"TGBot\"}},{\"user\":{\"id\":\"97397547754773\",\"type\":\"instagram\",\"name\":\"j.doe\"},\"app\":{\"id\":\"23\",\"type\":\"meta\",\"name\":\"FB&IG\"},\"via\":\"9687464235425\"}]"
  }];

}

message UpdateIMClientsRequest {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["input"]
    }
  };

  // --------- Result Options -------- //

  // Fields to be retrieved into result of changes.
  repeated string fields = 1;

  // ------- Reference Options ------- //

  // Link contact ID.
  int64 contact_id = 2;

  // --------- Update Options -------- //

  // Final set of IM-client(s) to be linked with the contact.
  // IM-client(s) that are already linked with the contact
  // but not given in here will be removed.
  repeated InputIMClient input = 3
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    // example: "[{\"id\":\"17\",\"ver\":\"1679792219687\",\"user\":{\"id\":\"5964113\",\"type\":\"telegram\",\"name\":\"Johnny Doe\"},\"app\":{\"id\":\"357\",\"type\":\"telegram\",\"name\":\"TGBot\"}},{\"user\":{\"id\":\"962972342364023\",\"type\":\"facebook\",\"name\":\"John Doe\"},\"app\":{\"id\":\"23\",\"type\":\"meta\",\"name\":\"FB&IG\"},\"via\":\"968752654236452\"}]"
    min_items: 1
    unique_items: true
  }];

}

message UpdateIMClientRequest {

  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["input"]
    }
  };

  // --------- PATCH Options -------- //

  // JSON PATCH fields mask.
  // List of JPath fields specified in body(input).
  repeated string x_json_mask = 1
  [(google.api.field_visibility) = {
    restriction: "PREVIEW"
  },
  (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    read_only: true
    pattern: "^$"
  }];

  // --------- Result Options -------- //

  // Fields to be retrieved into result of changes.
  repeated string fields = 2;

  // ------- Reference Options ------- //

  // Link contact ID.
  int64 contact_id = 3;

  // --------- Update Options -------- //

  // NEW Update of the IM-client account.
  InputIMClient input = 4;

}

message DeleteIMClientsRequest {
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["etag"]
    }
  };

  // --------- Result Options -------- //

  // Fields to be retrieved into result of changes.
  repeated string fields = 1;

  // ------- Reference Options ------- //

  // Link contact ID.
  int64 contact_id = 2;

  // --------- Delete Options -------- //

  // Set of unique link.ID(s) to be removed.
  repeated string etag = 3
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    // format: "int64"
    min_items: 1
    unique_items: true
    // pattern: "^[1-9](\\d){0,19}$"
    // field_configuration: {
    //   path_param_name: "id_or_number"
    // }
  }];

}

message DeleteIMClientRequest {
  
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: ["etag"]
    }
  };

  // --------- Result Options -------- //

  // Fields to be retrieved into result of changes.
  repeated string fields = 1;

  // ------- Reference Options ------- //

  // Link contact ID.
  int64 contact_id = 2;

  // Link unique ID to be removed.
  string etag = 3
  [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    // format: "int64"
    // pattern: "^[1-9](\\d){0,19}$"
    // field_configuration: {
    //   path_param_name: "id"
    // }
  }];

}