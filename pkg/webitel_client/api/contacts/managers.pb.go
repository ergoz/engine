// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.6
// source: contacts/managers.proto

package contacts

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Manager. The Contact's responsible User.
type Manager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID of the association. Never changes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Version of the latest update. Numeric sequence.
	Ver int32 `protobuf:"varint,2,opt,name=ver,proto3" json:"ver,omitempty"`
	// Unique ID of the latest version of the update.
	// This ID changes after any update to the underlying value(s).
	Etag string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	// The user who created this Field.
	CreatedAt int64 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp(milli) of the Field creation.
	CreatedBy *Lookup `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Timestamp(milli) of the last Field update.
	// Take part in Etag generation.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The user who performed last Update.
	UpdatedBy *Lookup `protobuf:"bytes,8,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// Indicates whether this association is the default
	// among others of the same type.
	Primary bool `protobuf:"varint,11,opt,name=primary,proto3" json:"primary,omitempty"`
	// Responsible User.
	User *Lookup `protobuf:"bytes,12,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Manager) Reset() {
	*x = Manager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manager) ProtoMessage() {}

func (x *Manager) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manager.ProtoReflect.Descriptor instead.
func (*Manager) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{0}
}

func (x *Manager) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Manager) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Manager) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Manager) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Manager) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Manager) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Manager) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *Manager) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *Manager) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

type InputManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique ID of the latest version of an existing resource.
	Etag string `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	// Indicates whether this association must be default among others.
	Primary bool `protobuf:"varint,11,opt,name=primary,proto3" json:"primary,omitempty"`
	// Responsible User.
	User *Lookup `protobuf:"bytes,12,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *InputManager) Reset() {
	*x = InputManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputManager) ProtoMessage() {}

func (x *InputManager) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputManager.ProtoReflect.Descriptor instead.
func (*InputManager) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{1}
}

func (x *InputManager) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *InputManager) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *InputManager) GetUser() *Lookup {
	if x != nil {
		return x.User
	}
	return nil
}

// Manager dataset.
type ManagerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Manager dataset page.
	Data []*Manager `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// The page number of the partial result.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates that this is a partial result.
	// More data available upon query: ?size=${data.len}&page=${page++}
	Next bool `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *ManagerList) Reset() {
	*x = ManagerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerList) ProtoMessage() {}

func (x *ManagerList) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerList.ProtoReflect.Descriptor instead.
func (*ManagerList) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{2}
}

func (x *ManagerList) GetData() []*Manager {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ManagerList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ManagerList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type SearchManagersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Page number of result. offset = ((page-1)*size)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size of result page. limit = (size++)
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Search term: user name;
	// `?` - matches any one character
	// `*` - matches 0 or more characters
	Q string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	// Sort the result according to fields.
	Sort []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact ID associated with.
	ContactId int64 `protobuf:"varint,5,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Record(s) with unique ID only.
	Id []string `protobuf:"bytes,7,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *SearchManagersRequest) Reset() {
	*x = SearchManagersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchManagersRequest) ProtoMessage() {}

func (x *SearchManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchManagersRequest.ProtoReflect.Descriptor instead.
func (*SearchManagersRequest) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{3}
}

func (x *SearchManagersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchManagersRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchManagersRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchManagersRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *SearchManagersRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchManagersRequest) GetContactId() int64 {
	if x != nil {
		return x.ContactId
	}
	return 0
}

func (x *SearchManagersRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type CreateManagersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Link contact ID.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Array of the unique User(s) to associate with the Contact.
	// Any duplicate of an already linked user{id} will result in an error.
	Input []*InputManager `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty"`
}

func (x *CreateManagersRequest) Reset() {
	*x = CreateManagersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagersRequest) ProtoMessage() {}

func (x *CreateManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagersRequest.ProtoReflect.Descriptor instead.
func (*CreateManagersRequest) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{4}
}

func (x *CreateManagersRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CreateManagersRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *CreateManagersRequest) GetInput() []*InputManager {
	if x != nil {
		return x.Input
	}
	return nil
}

type UpdateManagersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact ID associated with.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Final set of unique User(s) to be linked with the Contact.
	// User(s) that are already linked with the Contact
	// but not listed here will be removed.
	// The first element will become `primary` if no other specified.
	Input []*InputManager `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty"`
}

func (x *UpdateManagersRequest) Reset() {
	*x = UpdateManagersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManagersRequest) ProtoMessage() {}

func (x *UpdateManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManagersRequest.ProtoReflect.Descriptor instead.
func (*UpdateManagersRequest) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateManagersRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateManagersRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *UpdateManagersRequest) GetInput() []*InputManager {
	if x != nil {
		return x.Input
	}
	return nil
}

type DeleteManagersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact ID associated with.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Set of unique ID(s) to remove.
	Etag []string `protobuf:"bytes,3,rep,name=etag,proto3" json:"etag,omitempty"`
}

func (x *DeleteManagersRequest) Reset() {
	*x = DeleteManagersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contacts_managers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteManagersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManagersRequest) ProtoMessage() {}

func (x *DeleteManagersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_managers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManagersRequest.ProtoReflect.Descriptor instead.
func (*DeleteManagersRequest) Descriptor() ([]byte, []int) {
	return file_contacts_managers_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteManagersRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeleteManagersRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *DeleteManagersRequest) GetEtag() []string {
	if x != nil {
		return x.Etag
	}
	return nil
}

var File_contacts_managers_proto protoreflect.FileDescriptor

var file_contacts_managers_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x77, 0x65, 0x62, 0x69, 0x74,
	0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x15, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb7, 0x02, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xc2, 0x01, 0x0a, 0x0c, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x65,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0xca, 0x3e,
	0x07, 0xfa, 0x02, 0x04, 0x65, 0x74, 0x61, 0x67, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x47, 0x92, 0x41, 0x44, 0x0a, 0x07, 0xd2, 0x01, 0x04,
	0x65, 0x74, 0x61, 0x67, 0x32, 0x39, 0x7b, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x22,
	0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3a, 0x7b, 0x22, 0x69,
	0x64, 0x22, 0x3a, 0x22, 0x33, 0x35, 0x37, 0x22, 0x2c, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a,
	0x22, 0x42, 0x72, 0x75, 0x63, 0x65, 0x20, 0x57, 0x61, 0x79, 0x6e, 0x65, 0x22, 0x7d, 0x7d, 0x22,
	0x64, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77,
	0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x8d, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x12, 0xa0, 0x01, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x42, 0x6a, 0x92, 0x41, 0x67, 0x4a, 0x65, 0x5b, 0x7b, 0x22, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0x3a, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x22, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3a,
	0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x22, 0x33, 0x35, 0x37, 0x22, 0x2c, 0x22, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x3a, 0x22, 0x42, 0x72, 0x75, 0x63, 0x65, 0x20, 0x57, 0x61, 0x79, 0x6e, 0x65, 0x22,
	0x7d, 0x7d, 0x2c, 0x7b, 0x22, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3a, 0x7b, 0x22, 0x69, 0x64, 0x22,
	0x3a, 0x22, 0x33, 0x35, 0x34, 0x22, 0x2c, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x4a,
	0x6f, 0x68, 0x6e, 0x6e, 0x79, 0x20, 0x44, 0x6f, 0x65, 0x22, 0x7d, 0x7d, 0x5d, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x3a, 0x1a, 0x92, 0x41, 0x17, 0x0a, 0x15, 0xd2, 0x01, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x22, 0x8f, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x42, 0x09, 0x92, 0x41, 0x06, 0xa8, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x09, 0x92, 0x41, 0x06, 0xa8, 0x01, 0x01, 0xb0, 0x01, 0x01, 0x52, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x3a, 0x19, 0x92, 0x41, 0x16, 0x0a, 0x14, 0xd2, 0x01, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x04, 0x65, 0x74, 0x61, 0x67, 0x32, 0xa1, 0x04,
	0x0a, 0x08, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x7e, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x22, 0x1f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x85, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1f, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x62, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x1f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x42, 0x22, 0x5a, 0x20, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x67, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x3b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contacts_managers_proto_rawDescOnce sync.Once
	file_contacts_managers_proto_rawDescData = file_contacts_managers_proto_rawDesc
)

func file_contacts_managers_proto_rawDescGZIP() []byte {
	file_contacts_managers_proto_rawDescOnce.Do(func() {
		file_contacts_managers_proto_rawDescData = protoimpl.X.CompressGZIP(file_contacts_managers_proto_rawDescData)
	})
	return file_contacts_managers_proto_rawDescData
}

var file_contacts_managers_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_contacts_managers_proto_goTypes = []interface{}{
	(*Manager)(nil),               // 0: webitel.contacts.Manager
	(*InputManager)(nil),          // 1: webitel.contacts.InputManager
	(*ManagerList)(nil),           // 2: webitel.contacts.ManagerList
	(*SearchManagersRequest)(nil), // 3: webitel.contacts.SearchManagersRequest
	(*CreateManagersRequest)(nil), // 4: webitel.contacts.CreateManagersRequest
	(*UpdateManagersRequest)(nil), // 5: webitel.contacts.UpdateManagersRequest
	(*DeleteManagersRequest)(nil), // 6: webitel.contacts.DeleteManagersRequest
	(*Lookup)(nil),                // 7: webitel.contacts.Lookup
}
var file_contacts_managers_proto_depIdxs = []int32{
	7,  // 0: webitel.contacts.Manager.created_by:type_name -> webitel.contacts.Lookup
	7,  // 1: webitel.contacts.Manager.updated_by:type_name -> webitel.contacts.Lookup
	7,  // 2: webitel.contacts.Manager.user:type_name -> webitel.contacts.Lookup
	7,  // 3: webitel.contacts.InputManager.user:type_name -> webitel.contacts.Lookup
	0,  // 4: webitel.contacts.ManagerList.data:type_name -> webitel.contacts.Manager
	1,  // 5: webitel.contacts.CreateManagersRequest.input:type_name -> webitel.contacts.InputManager
	1,  // 6: webitel.contacts.UpdateManagersRequest.input:type_name -> webitel.contacts.InputManager
	3,  // 7: webitel.contacts.Managers.GetManagers:input_type -> webitel.contacts.SearchManagersRequest
	4,  // 8: webitel.contacts.Managers.AddManagers:input_type -> webitel.contacts.CreateManagersRequest
	5,  // 9: webitel.contacts.Managers.SetManagers:input_type -> webitel.contacts.UpdateManagersRequest
	6,  // 10: webitel.contacts.Managers.DelManagers:input_type -> webitel.contacts.DeleteManagersRequest
	2,  // 11: webitel.contacts.Managers.GetManagers:output_type -> webitel.contacts.ManagerList
	2,  // 12: webitel.contacts.Managers.AddManagers:output_type -> webitel.contacts.ManagerList
	2,  // 13: webitel.contacts.Managers.SetManagers:output_type -> webitel.contacts.ManagerList
	2,  // 14: webitel.contacts.Managers.DelManagers:output_type -> webitel.contacts.ManagerList
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_contacts_managers_proto_init() }
func file_contacts_managers_proto_init() {
	if File_contacts_managers_proto != nil {
		return
	}
	file_contacts_fields_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contacts_managers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contacts_managers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contacts_managers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contacts_managers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchManagersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contacts_managers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contacts_managers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManagersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contacts_managers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteManagersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contacts_managers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contacts_managers_proto_goTypes,
		DependencyIndexes: file_contacts_managers_proto_depIdxs,
		MessageInfos:      file_contacts_managers_proto_msgTypes,
	}.Build()
	File_contacts_managers_proto = out.File
	file_contacts_managers_proto_rawDesc = nil
	file_contacts_managers_proto_goTypes = nil
	file_contacts_managers_proto_depIdxs = nil
}
